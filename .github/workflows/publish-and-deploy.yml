name: Publish and Deploy

on:
  release:
    types:
      - created

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: downcase REPO and ORG
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ORGANIZATION: ${{ github.repository_owner }}
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
          echo "ORG=${GITHUB_ORGANIZATION,,}" >>${GITHUB_ENV}

      - name: Login to Docker GHCR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $GITHUB_TOKEN | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${ORG}/${REPO}:latest .

      - name: Push Docker image
        run: |
          docker push ghcr.io/${ORG}/${REPO}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-publish
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SSH_USER: ${{ secrets.DEV_SSH_USER }}
      HOST: ${{ secrets.DEV_HOST }}
      ENV_PATH: ${{ secrets.DEV_SSH_ENV_PATH }}
      PORT: ${{ secrets.DEV_DEPLOY_PORT }}
    steps:
      - name: downcase REPO and ORG
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ORGANIZATION: ${{ github.repository_owner }}
        run: |
          echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
          echo "ORG=${GITHUB_ORGANIZATION,,}" >>${GITHUB_ENV}

      - name: write ssh key to file
        run: |
          echo "${{ secrets.DEV_SSH_KEY }}" > id_rsa
          chmod 400 id_rsa
      - name: Login to GHCR Docker
        run: |
          ssh -o StrictHostKeyChecking=no -i id_rsa "${SSH_USER}@${HOST}" "echo $GITHUB_TOKEN | docker login ghcr.io \ 
          -u ${{ github.repository_owner }} --password-stdin"
      - name: Remove old image and container
        run: |
          ssh -o StrictHostKeyChecking=no -i id_rsa "${SSH_USER}@${HOST}" \
          "docker rm -f ${{github.repository}} || true \
          && docker rmi ghcr.io/${ORG}/${REPO}:latest || true"
      - name: Download and run image
        run: |
          ssh -o StrictHostKeyChecking=no -i id_rsa "${SSH_USER}@${HOST}" \
            "docker run -d --name ${{github.repository}} \
            -p ${{PORT}}:${{PORT}} \
            -e PORT=${{PORT}} \
            --env-file ${ENV_PATH} \
            ghcr.io/${ORG}/${REPO}:latest"
